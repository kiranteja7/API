<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="2" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-12T14:18:41 IST" name="Suite" finished-at="2022-07-12T14:18:58 IST" duration-ms="17579">
    <groups>
    </groups>
    <test started-at="2022-07-12T14:18:41 IST" name="Test" finished-at="2022-07-12T14:18:58 IST" duration-ms="17579">
      <class name="Framework.TestCases.TC01">
        <test-method is-config="true" signature="createReport()[pri:0, instance:Framework.TestCases.TC01@13e344d]" started-at="2022-07-12T14:18:40 IST" name="createReport" finished-at="2022-07-12T14:18:41 IST" duration-ms="206" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createReport -->
        <test-method is-config="true" signature="fetchDetails()[pri:0, instance:Framework.TestCases.TC01@13e344d]" started-at="2022-07-12T14:18:57 IST" name="fetchDetails" finished-at="2022-07-12T14:18:58 IST" duration-ms="825" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchDetails -->
        <test-method signature="getRequest()[pri:0, instance:Framework.TestCases.TC01@13e344d]" started-at="2022-07-12T14:18:58 IST" name="getRequest" finished-at="2022-07-12T14:18:58 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequest -->
        <test-method is-config="true" signature="getrequestResult(org.testng.ITestResult)[pri:0, instance:Framework.TestCases.TC01@13e344d]" started-at="2022-07-12T14:18:58 IST" name="getrequestResult" finished-at="2022-07-12T14:18:58 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getRequest status=SUCCESS method=TC01.getRequest()[pri:0, instance:Framework.TestCases.TC01@13e344d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getrequestResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Framework.TestCases.TC01@13e344d]" started-at="2022-07-12T14:18:58 IST" name="tearDown" finished-at="2022-07-12T14:18:58 IST" duration-ms="197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Framework.TestCases.TC01 -->
      <class name="Framework.TestCases.TC03">
        <test-method is-config="true" signature="createReport()[pri:0, instance:Framework.TestCases.TC03@5ab956d7]" started-at="2022-07-12T14:18:41 IST" name="createReport" finished-at="2022-07-12T14:18:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createReport -->
        <test-method is-config="true" signature="sendPost()[pri:0, instance:Framework.TestCases.TC03@5ab956d7]" started-at="2022-07-12T14:18:43 IST" name="sendPost" finished-at="2022-07-12T14:18:44 IST" duration-ms="1157" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendPost -->
        <test-method signature="postRequest()[pri:0, instance:Framework.TestCases.TC03@5ab956d7]" started-at="2022-07-12T14:18:58 IST" name="postRequest" finished-at="2022-07-12T14:18:58 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:976)
at org.testng.Assert.assertEquals(Assert.java:1010)
at Framework.TestCases.TC03.postRequest(TC03.java:89)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postRequest -->
        <test-method is-config="true" signature="getrequestResult(org.testng.ITestResult)[pri:0, instance:Framework.TestCases.TC03@5ab956d7]" started-at="2022-07-12T14:18:58 IST" name="getrequestResult" finished-at="2022-07-12T14:18:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=postRequest status=FAILURE method=TC03.postRequest()[pri:0, instance:Framework.TestCases.TC03@5ab956d7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getrequestResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Framework.TestCases.TC03@5ab956d7]" started-at="2022-07-12T14:18:58 IST" name="tearDown" finished-at="2022-07-12T14:18:58 IST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Framework.TestCases.TC03 -->
      <class name="Framework.TestCases.TC02">
        <test-method is-config="true" signature="createReport()[pri:0, instance:Framework.TestCases.TC02@3646a422]" started-at="2022-07-12T14:18:41 IST" name="createReport" finished-at="2022-07-12T14:18:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createReport -->
        <test-method is-config="true" signature="fetchResult()[pri:0, instance:Framework.TestCases.TC02@3646a422]" started-at="2022-07-12T14:18:41 IST" name="fetchResult" finished-at="2022-07-12T14:18:43 IST" duration-ms="2403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchResult -->
        <test-method signature="getResponse()[pri:0, instance:Framework.TestCases.TC02@3646a422]" started-at="2022-07-12T14:18:58 IST" name="getResponse" finished-at="2022-07-12T14:18:58 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResponse -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Framework.TestCases.TC02@3646a422]" started-at="2022-07-12T14:18:58 IST" name="tearDown" finished-at="2022-07-12T14:18:58 IST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="getrequestResults(org.testng.ITestResult)[pri:0, instance:Framework.TestCases.TC02@3646a422]" started-at="2022-07-12T14:18:58 IST" name="getrequestResults" finished-at="2022-07-12T14:18:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getResponse status=SUCCESS method=TC02.getResponse()[pri:0, instance:Framework.TestCases.TC02@3646a422] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getrequestResults -->
      </class> <!-- Framework.TestCases.TC02 -->
      <class name="Framework.TestCases.TC04">
        <test-method is-config="true" signature="createReport()[pri:0, instance:Framework.TestCases.TC04@2892d68]" started-at="2022-07-12T14:18:41 IST" name="createReport" finished-at="2022-07-12T14:18:41 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createReport -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:Framework.TestCases.TC04@2892d68]" started-at="2022-07-12T14:18:44 IST" name="beforeTest" finished-at="2022-07-12T14:18:57 IST" duration-ms="12750" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="deleteUser()[pri:0, instance:Framework.TestCases.TC04@2892d68]" started-at="2022-07-12T14:18:58 IST" name="deleteUser" finished-at="2022-07-12T14:18:58 IST" duration-ms="10" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:976)
at org.testng.Assert.assertEquals(Assert.java:1010)
at Framework.TestCases.TC04.deleteUser(TC04.java:109)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method is-config="true" signature="getrequestResult(org.testng.ITestResult)[pri:0, instance:Framework.TestCases.TC04@2892d68]" started-at="2022-07-12T14:18:58 IST" name="getrequestResult" finished-at="2022-07-12T14:18:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteUser status=FAILURE method=TC04.deleteUser()[pri:0, instance:Framework.TestCases.TC04@2892d68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getrequestResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Framework.TestCases.TC04@2892d68]" started-at="2022-07-12T14:18:58 IST" name="tearDown" finished-at="2022-07-12T14:18:58 IST" duration-ms="61" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Framework.TestCases.TC04 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
